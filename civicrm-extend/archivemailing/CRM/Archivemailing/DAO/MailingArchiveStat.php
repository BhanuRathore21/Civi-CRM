<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from archivemailing/xml/schema/CRM/Archivemailing/MailingArchiveStat.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:4634e3eb648d5ec874123784df1ea392)
 */
use CRM_Archivemailing_ExtensionUtil as E;

/**
 * Database access object for the MailingArchiveStat entity.
 */
class CRM_Archivemailing_DAO_MailingArchiveStat extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_mailing_archive_stat';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique MailingArchiveStat ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * FK to Mailing
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $mailing_id;

  /**
   * Number of recipients
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $recipients;

  /**
   * Number of emails delivered
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $deliveries;

  /**
   * Number of emails opened
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $opens;

  /**
   * Number of links clicked
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $clicks;

  /**
   * Number of mails forwarded
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $forwards;

  /**
   * Number of replies
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $replies;

  /**
   * Number of bounces
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $bounces;

  /**
   * Number of unsubscribes
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $unsubscribes;

  /**
   * Number of optouts
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $optouts;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_mailing_archive_stat';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Mailing Archive Stats') : E::ts('Mailing Archive Stat');
  }

  /**
   * Returns foreign keys and entity references.
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  public static function getReferenceColumns() {
    if (!isset(Civi::$statics[__CLASS__]['links'])) {
      Civi::$statics[__CLASS__]['links'] = static::createReferenceColumns(__CLASS__);
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'mailing_id', 'civicrm_mailing', 'id');
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
    }
    return Civi::$statics[__CLASS__]['links'];
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => E::ts('Unique MailingArchiveStat ID'),
          'required' => TRUE,
          'where' => 'civicrm_mailing_archive_stat.id',
          'table_name' => 'civicrm_mailing_archive_stat',
          'entity' => 'MailingArchiveStat',
          'bao' => 'CRM_Archivemailing_DAO_MailingArchiveStat',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'mailing_id' => [
          'name' => 'mailing_id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => E::ts('FK to Mailing'),
          'where' => 'civicrm_mailing_archive_stat.mailing_id',
          'table_name' => 'civicrm_mailing_archive_stat',
          'entity' => 'MailingArchiveStat',
          'bao' => 'CRM_Archivemailing_DAO_MailingArchiveStat',
          'localizable' => 0,
          'FKClassName' => 'CRM_Mailing_DAO_Mailing',
          'add' => NULL,
        ],
        'recipients' => [
          'name' => 'recipients',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Recipients'),
          'description' => E::ts('Number of recipients'),
          'where' => 'civicrm_mailing_archive_stat.recipients',
          'table_name' => 'civicrm_mailing_archive_stat',
          'entity' => 'MailingArchiveStat',
          'bao' => 'CRM_Archivemailing_DAO_MailingArchiveStat',
          'localizable' => 0,
          'add' => NULL,
        ],
        'deliveries' => [
          'name' => 'deliveries',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Deliveries'),
          'description' => E::ts('Number of emails delivered'),
          'where' => 'civicrm_mailing_archive_stat.deliveries',
          'table_name' => 'civicrm_mailing_archive_stat',
          'entity' => 'MailingArchiveStat',
          'bao' => 'CRM_Archivemailing_DAO_MailingArchiveStat',
          'localizable' => 0,
          'add' => NULL,
        ],
        'opens' => [
          'name' => 'opens',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Opens'),
          'description' => E::ts('Number of emails opened'),
          'where' => 'civicrm_mailing_archive_stat.opens',
          'table_name' => 'civicrm_mailing_archive_stat',
          'entity' => 'MailingArchiveStat',
          'bao' => 'CRM_Archivemailing_DAO_MailingArchiveStat',
          'localizable' => 0,
          'add' => NULL,
        ],
        'clicks' => [
          'name' => 'clicks',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Clicks'),
          'description' => E::ts('Number of links clicked'),
          'where' => 'civicrm_mailing_archive_stat.clicks',
          'table_name' => 'civicrm_mailing_archive_stat',
          'entity' => 'MailingArchiveStat',
          'bao' => 'CRM_Archivemailing_DAO_MailingArchiveStat',
          'localizable' => 0,
          'add' => NULL,
        ],
        'forwards' => [
          'name' => 'forwards',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Forwards'),
          'description' => E::ts('Number of mails forwarded'),
          'where' => 'civicrm_mailing_archive_stat.forwards',
          'table_name' => 'civicrm_mailing_archive_stat',
          'entity' => 'MailingArchiveStat',
          'bao' => 'CRM_Archivemailing_DAO_MailingArchiveStat',
          'localizable' => 0,
          'add' => NULL,
        ],
        'replies' => [
          'name' => 'replies',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Replies'),
          'description' => E::ts('Number of replies'),
          'where' => 'civicrm_mailing_archive_stat.replies',
          'table_name' => 'civicrm_mailing_archive_stat',
          'entity' => 'MailingArchiveStat',
          'bao' => 'CRM_Archivemailing_DAO_MailingArchiveStat',
          'localizable' => 0,
          'add' => NULL,
        ],
        'bounces' => [
          'name' => 'bounces',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Bounces'),
          'description' => E::ts('Number of bounces'),
          'where' => 'civicrm_mailing_archive_stat.bounces',
          'table_name' => 'civicrm_mailing_archive_stat',
          'entity' => 'MailingArchiveStat',
          'bao' => 'CRM_Archivemailing_DAO_MailingArchiveStat',
          'localizable' => 0,
          'add' => NULL,
        ],
        'unsubscribes' => [
          'name' => 'unsubscribes',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Unsubscribes'),
          'description' => E::ts('Number of unsubscribes'),
          'where' => 'civicrm_mailing_archive_stat.unsubscribes',
          'table_name' => 'civicrm_mailing_archive_stat',
          'entity' => 'MailingArchiveStat',
          'bao' => 'CRM_Archivemailing_DAO_MailingArchiveStat',
          'localizable' => 0,
          'add' => NULL,
        ],
        'optouts' => [
          'name' => 'optouts',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Optouts'),
          'description' => E::ts('Number of optouts'),
          'where' => 'civicrm_mailing_archive_stat.optouts',
          'table_name' => 'civicrm_mailing_archive_stat',
          'entity' => 'MailingArchiveStat',
          'bao' => 'CRM_Archivemailing_DAO_MailingArchiveStat',
          'localizable' => 0,
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'mailing_archive_stat', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'mailing_archive_stat', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
